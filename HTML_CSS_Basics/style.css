/* targets any p */

/* p {
  font-size: 16px;
  color: blue;
} */

/* targets any class named title .class name */

.title {
  font-size: 14px;
  background-color: black;
  color: white;
}

.gradient-img {
  width: 100%;
}

.group-1 {
  background-color: #41ffca52;
}

.group-2 {
  background-color: rgba(0, 100, 100, 0.1);
}

/* bg img   */

.group-3 {
  background-image: url(img/gradient2.png);
  width: 100%;
  height: 100%;
  background-repeat: none;
  background-position: center;
  background-size: cover;
  background-attachment: fixed;
}

/* border */

.border {
  /* border-width: 2px;
  border-style: solid;
  border-color: red; */

  /* writing in one line = width, style, color */
  border: 1px dashed blue;
  border-radius: 1px;
  border-top-left-radius: 20px;
  border-bottom-right-radius: 20px;
  cursor: pointer;
}

.border-top {
  border-top: 3px solid red;
  border-bottom: 2px dashed green;
  border-left: 3px dotted pink;
  border-top-left-radius: 10px;
}

/* position, text, lists, margin, padding, outline, shadow */

.float {
  float: right;
  /*display: none; doesnt show the content 
  visibility: hidden;*/
}

.height {
  background-color: red;
  height: 500px;
  width: 500px;
  min-width: 400px;
}

.text {
  line-height: 50px;
  font-size: 18px;
  font-style: italic;
  font-family: fantasy;
}

.list ul {
  list-style: none;
}

.margin {
  border: 2px solid red;
  margin: 40px; /* outside  40px to all sides*/
  padding: 100px; /* inside */
}

.custom-margin {
  border: 2px solid black;
  /* margin-left: 10px;
  margin-top: 50px; */

  /* margin: 10px 15px 20px 25px; top right bottom left */
  margin: 30px 35px; /* 30 = top bottom 35 = right left */
}

.input input {
  /* outline: none; */
  outline-color: red;
}

/* div inside div (parent child) */

.text-format .inner-class p {
  font-size: 24px;
  text-align: center;
  text-decoration: overline;
  text-transform: uppercase;
  letter-spacing: 8px;
  word-spacing: 10px;
  text-shadow: -2px 2px 3px pink;
}

/* pseudo-classes allow you to select and style elements based on different conditions and states

:hover - Matches an element when it is being hovered over.
:active - Matches an element when it is being activated (e.g., clicked on).
:focus - Matches an element that currently has keyboard focus.
:visited - Matches a link that has been visited.
:first-child - Matches an element that is the first child of its parent.
:last-child - Matches an element that is the last child of its parent.

*/

.pseudo-class p:hover {
  text-align: center;
  font-size: 18px;
  color: red;
}

.demo {
  width: 600px;
  height: 200px;
  background: magenta;
  margin: 10px auto;
  position: relative;
}

.demo-inner {
  width: 300px;
  height: 100px;
  background: purple;
  color: white;
  font-size: 24px;
  position: absolute;
  text-align: center;
  top: 10px;
  right: 10px;
}

.box {
  width: 600px;
  height: 200px;
  background: rgba(79, 79, 221, 0.712);
  margin: 10px auto;
  position: relative;
}

/* :after is a CSS pseudo-element that is used to insert content after the content of an element. 
It allows you to add additional visual elements or text that are not part of the actual HTML markup, 
but are rendered as if they were.
*/

.box::before {
  content: " ";
  width: 50px;
  height: 50px;
  background-color: aqua;
  position: absolute;
  bottom: -10;
  right: -10;
}

.box::after {
  content: " ";
  width: 100px;
  height: 50px;
  background-color: aqua;
  position: absolute;
  left: -10;
  top: -10;
}

/* boxes, position, display flex, hover, animation */

.boxes {
  width: 300px;
  height: 300px;
  margin: 50px auto;
  background: bisque;
  display: flex;
  /* align-items: flex-end; vertical align */
  /* justify-content: flex-start;  horizontal align */
  justify-content: space-between;
  /* flex-direction: row; row = default */
  flex-direction: row;
  flex-wrap: wrap;
}

.boxes-inner {
  height: 100px;
  font-size: 24px;
  color: white;
  /* flex-basis: 25%;
  padding: 20px; */
  width: 100px;
  transition: 0.3s ease;
  animation: motion 5s linear infinite;
}

.boxes-inner:nth-child(1) {
  background: red;
  /* flex-grow: 2; */
  /* flex-shrink: 4; */
}

.boxes-inner:nth-child(2) {
  background: green;
  /* flex-shrink: 1; */
}

.boxes-inner:nth-child(3) {
  background: blue;
  /* flex-shrink: 1; */
}

.boxes-inner:nth-child(4) {
  background: pink;
  /* flex: 1; */
  /* flex-shrink: 1; */
}

.boxes-inner:hover {
  background: black;
}

@keyframes motion {
  100% {
    transform: translate(40px, 10px);
  }
}
